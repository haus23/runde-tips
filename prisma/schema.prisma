generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Ruleset {
  id   Int    @id @default(autoincrement())
  slug String @unique

  name                String
  description         String
  extraQuestionRuleId String
  matchRuleId         String
  roundRuleId         String
  tipRuleId           String

  championships Championship[]
}

model Championship {
  id   Int    @id @default(autoincrement())
  slug String @unique

  nr                   Int
  name                 String
  published            Boolean @default(false)
  completed            Boolean @default(false)
  extraPointsPublished Boolean @default(false)

  rulesetId Int
  ruleset   Ruleset @relation(fields: [rulesetId], references: [id])

  rounds  Round[]
  matches Match[]
  players Player[]
}

model User {
  id   Int    @id @default(autoincrement())
  slug String @unique

  name  String
  role  String
  email String? @unique

  appearances Player[]
}

model League {
  id   Int    @id @default(autoincrement())
  slug String @unique

  name      String
  shortname String

  matches Match[]
}

model Team {
  id   Int    @id @default(autoincrement())
  slug String @unique

  name      String
  shortname String

  homematches Match[] @relation("hometeam")
  awaymatches Match[] @relation("awayteam")
}

model Round {
  id Int @id @default(autoincrement())

  nr            Int
  isDoubleRound Boolean @default(false)
  published     Boolean @default(false)
  tipsPublished Boolean @default(false)
  completed     Boolean @default(false)

  championshipId Int
  championship   Championship @relation(fields: [championshipId], references: [id])

  matches Match[]
}

model Match {
  id Int @id @default(autoincrement())

  nr     Int
  date   String?
  result String  @default("")
  points Int     @default(0)

  championshipId Int
  championship   Championship @relation(fields: [championshipId], references: [id])
  roundId        Int
  round          Round        @relation(fields: [roundId], references: [id])
  leagueId       Int?
  league         League?      @relation(fields: [leagueId], references: [id])
  hometeamId     Int?
  hometeam       Team?        @relation("hometeam", fields: [hometeamId], references: [id])
  awayteamId     Int?
  awayteam       Team?        @relation("awayteam", fields: [awayteamId], references: [id])
}

model Player {
  id   Int    @id @default(autoincrement())
  fbId String @unique

  points      Int     @default(0)
  extraPoints Decimal @default(0)
  totalPoints Decimal @default(0)
  rank        Int     @default(0)

  championshipId Int
  championship   Championship @relation(fields: [championshipId], references: [id])

  userId Int
  user   User @relation(fields: [userId], references: [id])
}
